"                                           # STRING, CIDR, YOUR NETWORK CONFIG HERE.
                    );
    };
    
    # DNS address communicated to UEs
    DEFAULT_DNS_IPV4_ADDRESS     = "8.8.8.8";                                   # YOUR NETWORK CONFIG HERE
    DEFAULT_DNS_SEC_IPV4_ADDRESS = "8.8.4.4";                                   # YOUR NETWORK CONFIG HERE

    # Non standard feature, normally should be set to "no", but you may need to set to yes for UE that do not explicitly request a PDN address through NAS signalling
    FORCE_PUSH_PROTOCOL_CONFIGURATION_OPTIONS = "no";                           # STRING, {"yes", "no"}. 
    UE_MTU                                    = 1500                            # INTEGER
    GTPV1U_REALIZATION                        = "GTP_KERNEL_MODULE";            # STRING {"NO_GTP_KERNEL_AVAILABLE", "GTP_KERNEL_MODULE", "GTP_KERNEL"}. In a container you may not be able to unload/load kernel modules.
        
    PCEF :
    {
      PCEF_ENABLED                            = "yes";                          # STRING, {"yes", "no"}, if yes then all parameters bellow will/should be taken into account
      TRAFFIC_SHAPPING_ENABLED                = "yes";                          # STRING, {"yes", "no"}, TODO, should finally work for egress but only on ingress bearers and not on ingress SDF flows
      TCP_ECN_ENABLED                         = "yes";                          # STRING, {"yes", "no"}, TCP explicit congestion notification
      AUTOMATIC_PUSH_DEDICATED_BEARER_PCC_RULE= 0;                              # INTEGER [ 0..n], SDF identifier (Please check with enum sdf_id_t in pgw_pcef_emulation.h,
                                                                                # !!!!!!!!!!!!  BE CAREFULL, EXPERIMENTAL !!!!!!!!!!!!!!! may need to be updated, and some are not available ) 
                                                                                # 0  = No push of dedicated bearer
                                                                                # 17  = SDF_ID_GBR_VOLTE_16K,                     // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 18  = SDF_ID_GBR_VOLTE_24K,                     // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 19  = SDF_ID_GBR_VOLTE_40K,                     // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 20  = SDF_ID_GBR_VOLTE_64K,                     // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 21  = SDF_ID_GBR_VILTE_192K,                    // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 22  = SDF_ID_GBR_VILTE_384K,                    // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 23  = SDF_ID_GBR_VILTE_768K,                    // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 24  = SDF_ID_GBR_VILTE_2M,                      // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 25  = SDF_ID_GBR_VILTE_4M,                      // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 26 = SDF_ID_GBR_NON_CONVERSATIONAL_VIDEO_256K, // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 27 = SDF_ID_GBR_NON_CONVERSATIONAL_VIDEO_512K, // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 28 = SDF_ID_GBR_NON_CONVERSATIONAL_VIDEO_1M,   // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 29 = SDF_ID_NGBR_IMS_SIGNALLING,               // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 30 = SDF_ID_NGBR_DEFAULT_PREMIUM,              // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 31 = SDF_ID_NGBR_DEFAULT,                      // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                # 32 = SDF_ID_TEST_PING                          // see corresponding TFT and QOS params in pgw_pcef_emulation.h
                                                                                
      DEFAULT_BEARER_STATIC_PCC_RULE = 31;                                      # SDF identifier for default bearer                                   
      PUSH_STATIC_PCC_RULES = (31);                                             # List of SDF identifiers  
                                                                                    
      # Waiting for HSS APN-AMBR IE ...
      APN_AMBR_UL                             = 500000;                         # Maximum UL bandwidth that can be used by non guaranteed bit rate traffic in Kbits/seconds.
      APN_AMBR_DL                             = 500000;                         # Maximum DL bandwidth that can be used by non guaranteed bit rate traffic in Kbits/seconds.
    };
};
